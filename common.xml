<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright 2007, 2008, 2009 Peter Fichtner | R E F L E K T K (fichtner@reflectk.de)

   Licensed under the Apache License, Version 2.0 (the "License"); you may
   not use this file except in compliance with the License. You may obtain a
   copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
   License for the specific language governing permissions and limitations
   under the License.
--> 

<project basedir="." name="common-tasks">
	
	<target name="copy" depends="preCopy" description="copy all source files to source">
		<!-- default dest if not already defined (e.g. in a property file) -->
		<property name="dest" value="${build}/classes"/>
		<mkdir dir="${build}/src"/>
		<copy todir="${build}/src" preservelastmodified="true" overwrite="true" filtering="false" verbose="true">
			<fileset dir="${src}"/>
		</copy>
	</target>

	<!-- hook method -->
	<target name="preCopy"/>
	
	<target name="checkForResource">
		<available file="${rsc}" property="file.exists.resource"/>
	</target>

	<target name="copyStatic" depends="checkForResource, createDest, preStaticCopy" if="file.exists.resource">
		<copy todir="${dest}" preservelastmodified="true" overwrite="true" filtering="false" verbose="true">
			<fileset dir="${rsc}"/>
		</copy>
	</target>
	
	<!-- hook method -->
	<target name="preStaticCopy"/>
	
	<target name="createDistLib">
		<mkdir dir="${dist}/lib"/>
	</target>

	<target name="createDest">
		<mkdir dir="${dest}"/>
	</target>
	
	<target name="compile" depends="createDest, createDistLib, build-depend, copy, copyStatic" description="compiles everything from source to bin">
		<javac 
			encoding="${javac.settings.encoding}"
			debug="${javac.settings.debug}" 
			deprecation="${javac.settings.deprecation}" 
			nowarn="${javac.settings.nowarn}" 
			source="${javac.settings.source}" 
			target="${javac.settings.target}" 
			verbose="${javac.settings.verbose}" 
			optimize="${javac.settings.optimize}" 
			classpathref="project.class.path"
			destdir="${dest}">
			<src path="${build}/src"/>
		</javac>
	</target>

	<!-- real task must overwrite this target -->
	<target name="build-depend">
		<fail message="target build-depend has to be overwritten"/>
	</target>
	
	<target name="jarjar" depends="compile">
		<mkdir dir="${build}"/>
		<jar destfile="${dist}/lib/${out.name}-${version}.jar" compress="true">
			<fileset dir="${dest}"/>
		</jar>
	</target>
	
	<target name="checkForLib">
		<available file="${lib}" property="file.exists.lib"/>
	</target>
	
	<target name="copyLibToDistLib" depends="checkForLib" if="file.exists.lib">
		<copy preservelastmodified="true" todir="${dist}/lib" failonerror="false" verbose="false">
			<fileset dir="${lib}"/>
		</copy>
	</target>
	
	
	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<target name="javadoc" depends="setupProxy" description="Generates the javadocs">
		<!-- cleanup destDir -->
		<delete dir="${javadoc.dest}"/>
		<!-- recreate it -->
		<mkdir dir="${javadoc.dest}"/>
		<!-- will only be set if not already set -->
		<property name="proxy.use" value="true"/>
		<javadoc 
			additionalparam=" -J-DproxySet=${proxy.use} -J-DproxyHost=${proxy.host} -J-DproxyPort=${proxy.port}"
			destdir="${javadoc.dest}" 
			sourcepath="${src}" 
			packagenames="${javadoc.packagenames}" 
			author="${javadoc.author}" 
			nodeprecated="${javadoc.nodeprecated}" 
			use="${javadoc.use}" 
			link="${javadoc.link}"
			windowtitle="${javadoc.windowtitle}" 
			version="${javadoc.version}">
		</javadoc>
	</target>
	
	<target name="setupProxy" depends="readProxyProperties" if="proxy.host">
		<setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"/>
		<property name="proxy.use" value="true"/>
		<echo message="Proxy set to ${proxy.host}:${proxy.port}"/>
	</target>
	
	<target name="readProxyProperties">
		<property file="${basedir}/proxy.properties.${user.name}"/>
		<property file="${basedir}/proxy.properties"/>
	</target>
	
	<target name="zipJavadoc" depends="javadoc">
		<dirname file="${javadoc.zip}" property="javadoc.dir"/>
		<mkdir dir="${javadoc.dir}"/>
		<zip destfile="${javadoc.zip}-${version}.zip" basedir="${javadoc.dest}"/>
	</target>

	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	
	<target name="commondist" depends="jarjar, copyLibToDistLib" description="makes a jar of what is in the bin directory"/>
	
	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="clean-all" depends="clean-depend, clean"/>

	<!-- real task must overwrite this target -->
	<target name="clean-depend">
		<fail message="target clean-depend has to be overwritten"/>
	</target>

</project>
